Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) MIC Architecture, Version 17.0.1.132 Build 20161005

Compiler options: -g -O3 -DUSE_OMP -fopenmp -DICC -debug inline-debug-info -vec-report3 -qopt-report=3 -qopt-report-phase=vec -mmic -c -D_LINUX

Begin optimization report for: main()

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/matrix.c(49,3) inlined into ../src/matrix.c(144,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/matrix.c(50,5) inlined into ../src/matrix.c(144,2)
   <Peeled loop for vectorization>
      remark #15301: PEEL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at ../src/matrix.c(50,5) inlined into ../src/matrix.c(144,2)
      remark #15300: LOOP WAS VECTORIZED
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 27 
      remark #15477: vector cost: 2.120 
      remark #15478: estimated potential speedup: 12.520 
      remark #15487: type converts: 2 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at ../src/matrix.c(50,5) inlined into ../src/matrix.c(145,2)
   LOOP END

   LOOP BEGIN at ../src/matrix.c(50,5) inlined into ../src/matrix.c(144,2)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at ../src/matrix.c(50,5) inlined into ../src/matrix.c(144,2)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END
LOOP END

LOOP BEGIN at ../src/matrix.c(49,3) inlined into ../src/matrix.c(145,2)
LOOP END
===========================================================================

Begin optimization report for: print_arr(char *, TYPE (*)[3840])

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/matrix.c(62,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between call:printf(const char *__restrict__, ...) (64:7) and call:fflush(FILE *) (66:19)

   LOOP BEGIN at ../src/matrix.c(63,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: init_arr(TYPE, TYPE, TYPE, TYPE (*)[3840])

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/matrix.c(49,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/matrix.c(50,5)
   <Peeled loop for vectorization>
      remark #15301: PEEL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at ../src/matrix.c(50,5)
      remark #15300: LOOP WAS VECTORIZED
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 15 
      remark #15477: vector cost: 1.370 
      remark #15478: estimated potential speedup: 10.740 
      remark #15487: type converts: 1 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at ../src/matrix.c(50,5)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END
LOOP END
===========================================================================
